name: Deploy to AWS EC2 with Docker Compose

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. コードをチェックアウト（pathオプションを削除）
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # リポジトリ全体を取得

    # 2. AWSクレデンシャルを設定
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    # 3. ワークスペースの構造を確認（デバッグ用）
    - name: List workspace structure
      run: |
        pwd
        ls -R

    # 4. SSHキーをセットアップ
    - name: Setup SSH key
      run: |
        mkdir -p /home/runner/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > /home/runner/.ssh/aws_key.pem
        chmod 600 /home/runner/.ssh/aws_key.pem

    # 5. SSH接続をテスト
    - name: Test SSH Connection
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i /home/runner/.ssh/aws_key.pem -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "echo Connected successfully."

    # 6. アプリケーションファイルをEC2にコピー
    - name: Copy application files to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "Copying application files to EC2..."
        rsync -avz --no-perms --omit-dir-times --delete \
          --exclude 'Zubolife_Laravel/' \  # 不要なディレクトリを除外
          -e "ssh -i /home/runner/.ssh/aws_key.pem -o StrictHostKeyChecking=no" \
          ./zubolaapp/ ${EC2_USER}@${EC2_HOST}:/home/ec2-user/zubolaapp || { echo "rsync error occurred"; exit 1; }

    # 7. `docker-compose.yml`の存在を確認
    - name: Verify docker-compose.yml on EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i /home/runner/.ssh/aws_key.pem -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
          echo "Checking for docker-compose.yml in /home/ec2-user/zubolaapp..."
          ls -la /home/ec2-user/zubolaapp
          if [ ! -f /home/ec2-user/zubolaapp/docker-compose.yml ]; then
            echo "Error: docker-compose.yml not found in /home/ec2-user/zubolaapp"
            exit 1
          else
            echo "docker-compose.yml found. Proceeding with deployment..."
          fi
        EOF

    # 8. EC2上でDocker Composeを使ってデプロイ
    - name: SSH into EC2 and deploy with Docker Compose
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i /home/runner/.ssh/aws_key.pem -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
          cd /home/ec2-user/zubolaapp
          echo "Shutting down existing Docker containers..."
          sudo docker-compose down
          echo "Starting Docker containers with the latest changes..."
          sudo docker-compose up -d --build
        EOF

